# Tic Tac Toe

import pygame
import random
import time

# Needed to initialize pygame
pygame.init()

# Create a 2-D list to represent a grid.
# Initialize grid values to 0 (white)
width = 100
height = 100
numColumns = 3
numRows = 3

# Define some Constants
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
GREY = (96, 96, 96)
RED = (255, 0, 0)
GREEN = (0, 255, 0)
BLUE = (0, 0, 255)
YELLOW = (255, 255, 0)
PURPLE = (255, 0, 255)
ORANGE = (255, 128, 0)


SCREEN_WIDTH = width*numColumns
SCREEN_HEIGHT = height*numRows

# Create a screen
size = [SCREEN_WIDTH,SCREEN_HEIGHT]
screen = pygame.display.set_mode(size)
pygame.display.set_caption("Clickable Grid")

# Used to manage how fast the screen updates
clock = pygame.time.Clock()


currentColour = BLACK
currentPlayer = "Player 1"
winner = "Player"


grid = []
for row in range(numRows):
    grid.append([])
    for column in range(numColumns):
        grid[row].append(0)


numValueRow1 = 0
numValueRow2 = 0
numValueColumn1 = 0
numValueColumn2 = 0

#Loop until the user clicks the close button.
loop = True

# -------- Main Program Loop -----------
while loop:
    # EVENT PROCESSING
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            loop = False

        elif event.type == pygame.MOUSEBUTTONDOWN:
            # Get Grid Location of mouse click
            pos = pygame.mouse.get_pos()
            row = pos[1] // height
            column = pos[0] // width
            
    
            # Switch turns
            if currentPlayer == "Player 1":
                if grid[row][column] == 0:
                    grid[row][column] = 1
                    currentPlayer = "Player 2"
                else:
                    print("Do Not Touch")
            else:
                if grid[row][column] == 0:
                    grid[row][column] = 2
                    currentPlayer = "Player 1"
                else:
                    print("Do Not Touch")


        elif event.type == pygame.KEYDOWN:
            # Use number keys to control current colour
            if event.key == pygame.K_1:
                currentColour = WHITE
            elif event.key == pygame.K_2:
                currentColour = BLACK
            elif event.key == pygame.K_3:
                currentColour = BLUE
            elif event.key == pygame.K_4:
                currentColour = RED


    # DRAW COMMANDS
    screen.fill(WHITE)

    # Draw the grid.
    
    
    for row in range(numRows):
        for column in range(numColumns):
            if grid[row][column] == 1:
                pygame.draw.line(screen,GREEN,[width * column, height * row], [(width*column)+width, (row*height) + height],10)
                pygame.draw.line(screen,GREEN,[(width*column)+width, height * row], [width * column, (row*height) + height],10)
            elif grid[row][column] == 2:
                pygame.draw.ellipse(screen,RED,[width * column, height * row, width, height],7)
    
        
    
            
    for column in range(1,numColumns):
        pygame.draw.line(screen,BLACK,[column * width,0], [column * width,SCREEN_HEIGHT])

    for row in range(1,numRows):
        pygame.draw.line(screen,BLACK,[0,row * height], [SCREEN_WIDTH, row* height])

    #Column List
    columnList = []
    for column in range(numColumns):
        columnList.append([])
        for row in range(numRows):
            columnList[column].append(grid[row][column])
        

    #Checking winners
    
    for row in range(numRows):
        for column in range(numColumns):
            if grid[row].count(1) == 3:
                winner = "Player1"
                pygame.draw.line(screen,ORANGE,[0,(row * height)+50], [SCREEN_WIDTH, (row* height)+50],10)
                loop = False
            elif grid[row].count(2) == 3:  
                winner = "Player2"
                pygame.draw.line(screen,ORANGE,[0,(row * height)+50], [SCREEN_WIDTH, (row* height)+50],10)
                loop = False
            elif columnList[column].count(1) == 3:
                winner = "Player1"
                pygame.draw.line(screen,ORANGE,[(column * width)+50,0], [(column * width)+50,SCREEN_HEIGHT],10)
                loop = False
            elif columnList[column].count(2) == 3:
                winner = "Player2"
                pygame.draw.line(screen,ORANGE,[(column * width)+50,0], [(column * width)+50,SCREEN_HEIGHT],10)
                loop = False
            elif grid[0][0] == 1 and grid[1][1] == 1 and grid[2][2] == 1:
                winner = "Player1"
                pygame.draw.line(screen,ORANGE,[row,0], [(row+(width*3)),SCREEN_HEIGHT],10)
                loop = False
            elif grid[0][0] == 2 and grid[1][1] == 2 and grid[2][2] == 2:
                winner = "Player2"
                pygame.draw.line(screen,ORANGE,[row,0], [(row+(width*3)),SCREEN_HEIGHT],10)
                loop = False
            elif grid[0][2] == 1 and grid[1][1] == 1 and grid[2][0] == 1:
                winner = "Player1"
                pygame.draw.line(screen,ORANGE,[(row+(width*3)),0], [row,SCREEN_HEIGHT],10)
                loop = False
            elif grid[0][2] == 2 and grid[1][1] == 2 and grid[2][0] == 2 :
                winner = "Player2"
                pygame.draw.line(screen,ORANGE,[(row+(width*3)),0], [row,SCREEN_HEIGHT],10)
                loop = False
            elif 0 not in grid[0] and 0 not in grid[1] and 0 not in grid[2] and 0 not in columnList[0] and 0 not in columnList[1] and 0 not in columnList[2] and winner == "Player":
                winner = "None"
                loop = False
            else:
                pass
           
      

    
    #Result

    if winner == "Player1":
        print("X wins")
    elif winner == "Player2":
        print("O wins")
    elif winner == "None":
        print("It's a draw")
    else:
        pass
        


    # Update Screen
    pygame.display.flip()

    # Set frames per second
    clock.tick(30)
# -------- End of Main Program Loop --------


# Close the window and quit.
pygame.quit()

